// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  isInternMember Boolean?  @default(false)
  attendance    AttendanceOnUsers[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Attendance {
  id String @id @default(cuid())
  date DateTime @default(now()) @db.Date @unique
  users AttendanceOnUsers[]
}

model AttendanceOnUsers {
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String 
  attendance Attendance @relation(fields: [attendanceId], references: [id], onDelete: Cascade)
  attendanceId String

  @@id([userId, attendanceId])
}

model InternSession {
  id String @id @default(cuid())
  title String
  date DateTime @default(now()) @db.Date @unique
}